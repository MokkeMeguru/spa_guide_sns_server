openapi: 3.0.3
info:
  title: "SPA Guide: SNS API Server"
  description: the sample of SNS API Server (TOY)
  version: 0.1.1
  termsOfService: https://github.com/MokkeMeguru/spa_guide_sns_server
  contact:
    name: API Server support
    url: https://github.com/MokkeMeguru
    email: meguru.mokke@gmail.com
  license:
    name: MIT
    url: https://github.com/opensource-jp/licenses/blob/dc436911d1f0f150ca66c3f6ff91c60584567933/MIT/MIT.md
servers:
  - url: http://127.0.0.1:3000
    description: local server (run with `npm run start_release`)
components:
  schemas:
    CommunityMember:
      type: object
      properties:
        id:
          type: string
        user:
          $ref: "#/components/schemas/User"
        communityId:
          type: string
        role:
          enum:
            - member
            - owner
          type: string
      required:
        - id
        - user
        - communityId
        - role
      description: community member information
    CommunityInput:
      type: object
      properties:
        name:
          type: string
        details:
          type: string
        category:
          enum:
            - anime
            - geek
            - gurmand
            - sports
          type: string
      required:
        - name
        - details
        - category
      description: community input model
      example:
        name: 辛い肩こりにPON☆と効く、ストレッチ研究会
        details: 背筋を伸ばして寿命も伸ばそう
        category: sports
    CommunityEvent:
      type: object
      properties:
        id:
          type: string
        communityId:
          type: string
        ownedMemberId:
          type: string
        name:
          type: string
        details:
          type: string
        holdAt:
          type: integer
          format: int64
        category:
          enum:
            - party
            - seminar
          type: string
        imageUrl:
          type: string
      required:
        - id
        - communityId
        - ownedMemberId
        - name
        - details
        - holdAt
        - category
        - imageUrl
      description: community event informatoion
    CommunityEventCommentInput:
      type: object
      properties:
        body:
          type: string
      required:
        - body
      description: the comment input model
      example:
        body: 深夜作業には、エナジードリンクと栄養ドリンク、どっちが向いていると思いますか？
    Community:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        details:
          type: string
        category:
          enum:
            - anime
            - geek
            - gurmand
            - sports
          type: string
        imageUrl:
          type: string
        membership:
          type: integer
          format: int64
          minimum: 1
        createdAt:
          type: integer
          format: int64
          minimum: 0
        updatedAt:
          type: integer
          format: int64
          minimum: 0
      required:
        - id
        - name
        - details
        - category
        - imageUrl
        - membership
        - createdAt
        - updatedAt
      description: community information
      example:
        id: f61f5f38-174b-43e1-8873-4f7cdbee1c18
        name: 辛いものの部
        details: 辛いものが好きな人集まれー
        category: gurmand
        imageUrl: https://picsum.photos/id/292/{width}/{height}.jpg
        membership: 10
        createdAt: 1647307406
        updatedAt: 1647307406
    User:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        iconUrl:
          type: string
      required:
        - id
        - name
        - iconUrl
      description: user information
      example:
        id: 6e803bdf-55a7-4a31-849e-8489cc76a457
        name: Meguru Mokke
        iconUrl: https://avatars.githubusercontent.com/u/30849444?v=4
    CommunityEventInput:
      type: object
      properties:
        name:
          type: string
        details:
          type: string
        holdAt:
          type: integer
          format: int64
        category:
          enum:
            - party
            - seminar
          type: string
      required:
        - name
        - details
        - holdAt
        - category
      description: community event input model
      example:
        name: 超激辛麻婆豆腐を味わいに冬木市に行こう
        details: 食うか―――？
        holdAt: 1656795600000
        category: party
    CommunityEventComment:
      type: object
      properties:
        id:
          type: string
        eventId:
          type: string
        commentedMemberId:
          type: string
        body:
          type: string
        commentAt:
          type: integer
          format: int64
      required:
        - id
        - eventId
        - commentedMemberId
        - body
        - commentAt
      description: the comment on the community event
      example:
        id: 4ad8ef9d-8a2e-45fb-b77c-a16dd32a3746
        eventId: 687a7541-336a-43b1-8f29-a1f5412512ee
        commentedMemberId: eb86ddc9-6446-44d3-8afa-5def58bbe340
        body: ポインタには中身がある…………そんなふうに考えていた時期が俺にもありました
        commentAt: 1648397939347
    Error:
      type: object
      properties:
        code:
          type: integer
          format: int64
        message:
          type: string
      required:
        - code
        - message
paths:
  /communities:
    get:
      operationId: listCommunity
      tags:
        - community
      description: |-
        全てのコミュニティのリストを返します<br/>
        クエリパラメータは、begin_cursor>last_cursorの順で評価されます<br/>
        cursor に存在しない communityId が指定されたときには cursor が指定されなかったときと同じ挙動をします<br/>
        - beginCursor: 指定された communityId より後のコミュニティリストを返す<br/>
        - lastCursor : 指定された communityId より前のコミュニティリストを返す<br/>
        - requestSize: 指定されたサイズ以下ののコミュニティリストを返す<br/>
        - keyword: 指定されたキーワードに部分一致するコミュニティリストを返す
      responses:
        "200":
          description: コミュニティのリスト
          content:
            application/json:
              schema:
                type: object
                required:
                  - communities
                  - beforeSize
                  - totalSize
                properties:
                  communities:
                    type: array
                    items:
                      type: object
                      required:
                        - community
                      properties:
                        community:
                          $ref: "#/components/schemas/Community"
                        isJoined:
                          type: boolean
                          description: the logined user is joined the community
                          title: IsJoined
                          nullable: true
                  beforeSize:
                    type: integer
                    format: int64
                    minimum: 0
                    description: レスポンスのリストより前の要素数
                    title: beforeSize
                  totalSize:
                    type: integer
                    format: int64
                    minimum: 0
                    title: totalSize
      parameters:
        - name: requestSize
          in: query
          description: ""
          required: true
          schema:
            type: integer
            format: int64
            minimum: 1
        - name: beginCursor
          in: query
          description: ""
          required: false
          schema:
            type: string
        - name: lastCursor
          in: query
          description: ""
          required: false
          schema:
            type: string
        - name: keyword
          in: query
          description: ""
          required: false
          schema:
            type: string
    post:
      operationId: createCommunity
      tags:
        - community
      description: 新しいコミュニティを作成します
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CommunityInput"
      responses:
        "200":
          description: コミュニティの ID
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                required:
                  - id
  "/communities/{communityId}":
    get:
      operationId: getCommunity
      tags:
        - community
      description: コミュニティの情報を返します
      responses:
        "200":
          description: コミュニティと所属メンバー一覧
          content:
            application/json:
              schema:
                type: object
                required:
                  - community
                  - members
                properties:
                  community:
                    $ref: "#/components/schemas/Community"
                  isJoined:
                    type: boolean
                    description: the logined user is joined the community
                    title: IsJoined
                    nullable: true
                  members:
                    type: array
                    items:
                      $ref: "#/components/schemas/CommunityMember"
      parameters:
        - name: communityId
          in: path
          description: ""
          required: true
          schema:
            type: string
  "/communities/{communityId}/events":
    get:
      operationId: listCommunityEvent
      tags:
        - communityEvent
      description: >-
        コミュニティの全てのイベントを返します<br/>

        includes の設計は Twitter と同じで、重複しうる参照をまとめて返します (簡単のために required にしています)<br/>

        see.  https://developer.twitter.com/en/docs/twitter-api/tweets/lookup/api-reference/get-tweets-id#Optional<br/>

        cursor に存在しない eventId が指定されたときには cursor が指定されなかったときと同じ挙動をします<br/>

        - beginCursor: 指定された communityId より後のコミュニティリストを返す<br/>

        - lastCursor : 指定された communityId より前のコミュニティリストを返す<br/>

        - requestSize: 指定されたサイズ以下ののコミュニティリストを返す<br/>

        - keyword: 指定されたキーワードに部分一致するコミュニティリストを返す
      responses:
        "200":
          description: コミュニティの全てのイベント
          content:
            application/json:
              schema:
                type: object
                required:
                  - events
                  - beforeSize
                  - totalSize
                  - includes
                properties:
                  events:
                    type: array
                    items:
                      type: object
                      required:
                        - communityEvent
                        - representativeComment
                      properties:
                        communityEvent:
                          $ref: "#/components/schemas/CommunityEvent"
                        representativeComment:
                          type: array
                          items:
                            $ref: "#/components/schemas/CommunityEventComment"
                  includes:
                    type: object
                    required:
                      - communityMembers
                    properties:
                      communityMembers:
                        type: array
                        items:
                          $ref: "#/components/schemas/CommunityMember"
                  beforeSize:
                    type: integer
                    format: int64
                    minimum: 0
                    description: レスポンスのリストより前の要素数
                    title: beforeSize
                  totalSize:
                    type: integer
                    format: int64
                    minimum: 0
                    title: totalSize
      parameters:
        - name: communityId
          in: path
          description: ""
          required: true
          schema:
            type: string
        - name: requestSize
          in: query
          description: ""
          required: true
          schema:
            type: integer
            format: int64
            minimum: 1
        - name: beginCursor
          in: query
          description: ""
          required: false
          schema:
            type: string
        - name: lastCursor
          in: query
          description: ""
          required: false
          schema:
            type: string
    post:
      operationId: createCommunityEvent
      tags:
        - communityEvent
      description: コミュニティのイベントを作成します
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CommunityEventInput"
      responses:
        "200":
          description: コミュニティイベントの ID
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                required:
                  - id
      parameters:
        - name: communityId
          in: path
          description: ""
          required: true
          schema:
            type: string
  "/communities/{communityId}/events/{eventId}/comments":
    get:
      operationId: listCommunityEventComment
      tags:
        - communityEventComment
      description: コミュニティイベントについた全てのコメントを返します
      responses:
        "200":
          description: コミュニティイベントについたコメント
          content:
            application/json:
              schema:
                type: object
                required:
                  - comments
                  - includes
                properties:
                  comments:
                    type: array
                    items:
                      $ref: "#/components/schemas/CommunityEventComment"
                  includes:
                    type: object
                    required:
                      - communityMembers
                    properties:
                      communityMembers:
                        type: array
                        items:
                          $ref: "#/components/schemas/CommunityMember"
      parameters:
        - name: communityId
          in: path
          description: ""
          required: true
          schema:
            type: string
        - name: eventId
          in: path
          description: ""
          required: true
          schema:
            type: string
    post:
      operationId: createCommunityEventComment
      tags:
        - communityEventComment
      description: コミュニティイベントにコメントを投稿します
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CommunityEventCommentInput"
      responses:
        "200":
          description: コメントの ID
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                required:
                  - id
      parameters:
        - name: communityId
          in: path
          description: ""
          required: true
          schema:
            type: string
        - name: eventId
          in: path
          description: ""
          required: true
          schema:
            type: string
  "/communities/{communityId}/join":
    post:
      operationId: joinCommunity
      tags:
        - community
      description: コミュニティに参加します
      responses:
        "200":
          description: 新規メンバーID
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                required:
                  - id
        "204":
          description: メンバーID (すでに community に参加済み)
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                required:
                  - id
      parameters:
        - name: communityId
          in: path
          description: ""
          required: true
          schema:
            type: string
  /my/profile:
    get:
      operationId: getMyProfile
      description: ユーザ情報を返します
      tags:
        - my
      responses:
        "200":
          description: ログインユーザ
          content:
            application/json:
              schema:
                type: object
                required:
                  - user
                properties:
                  user:
                    $ref: "#/components/schemas/User"
  /test:
    get:
      operationId: getTest
      description: ping pong
      tags:
        - test
      responses:
        "200":
          description: pong
          content:
            application/json:
              schema:
                example: "Hello : User"
      parameters:
        - name: name
          in: query
          description: ""
          required: true
          schema:
            type: string
  /users:
    get:
      operationId: listUser
      description: 全てのユーザのリストを返します (debug)
      tags:
        - user
      responses:
        "200":
          description: 全てのユーザ
          content:
            application/json:
              schema:
                type: object
                required:
                  - users
                  - totalSize
                properties:
                  users:
                    type: array
                    items:
                      $ref: "#/components/schemas/User"
                  totalSize:
                    type: integer
                    format: int64
                    minimum: 0
                    title: totalSize
  "/users/{id}":
    get:
      operationId: getUser
      tags:
        - user
      responses:
        "200":
          description: id を持つユーザ
          content:
            application/json:
              schema:
                type: object
                required:
                  - user
                properties:
                  user:
                    $ref: "#/components/schemas/User"
        "404":
          description: user is not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      parameters:
        - name: id
          in: path
          description: ""
          required: true
          schema:
            type: string
