openapi: 3.0.3
info:
  title: "SPA Guide: SNS API Server"
  description: the sample of SNS API Server (TOY)
  version: 0.1.1
  termsOfService: https://github.com/MokkeMeguru/spa_guide_sns_server
  contact:
    name: API Server support
    url: https://github.com/MokkeMeguru
    email: meguru.mokke@gmail.com
  license:
    name: MIT
    url: https://github.com/opensource-jp/licenses/blob/dc436911d1f0f150ca66c3f6ff91c60584567933/MIT/MIT.md
servers:
  - url: http://127.0.0.1:3000
    description: local server (run with `npm run start_release`)
components:
  schemas:
    User:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        iconUrl:
          type: string
      required:
        - id
        - name
        - iconUrl
      description: user information
      example:
        id: 6e803bdf-55a7-4a31-849e-8489cc76a457
        name: Meguru Mokke
        iconUrl: https://avatars.githubusercontent.com/u/30849444?v=4
    Community:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        details:
          type: string
        category:
          enum:
            - anime
            - geek
            - gurmand
            - sports
          type: string
        imageUrl:
          type: string
        membership:
          type: integer
          format: int64
          minimum: 1
        createdAt:
          type: integer
          format: int64
          minimum: 0
        updatedAt:
          type: integer
          format: int64
          minimum: 0
      required:
        - id
        - name
        - details
        - category
        - imageUrl
        - membership
        - createdAt
        - updatedAt
      description: community information
      example:
        id: f61f5f38-174b-43e1-8873-4f7cdbee1c18
        name: 辛いものの部
        details: 辛いものが好きな人集まれー
        category: gurmand
        imageUrl: https://picsum.photos/id/292/{width}/{height}.jpg
        membership: 10
        createdAt: 1647307406
        updatedAt: 1647307406
    CommunityMember:
      type: object
      properties:
        id:
          type: string
        user:
          $ref: "#/components/schemas/User"
        community:
          $ref: "#/components/schemas/Community"
        role:
          enum:
            - member
            - owner
          type: string
      required:
        - id
        - user
        - community
        - role
      description: community member information
    CommunityEvent:
      type: object
      properties:
        id:
          type: string
        communityId:
          type: string
        ownedMemberId:
          type: string
        name:
          type: string
        details:
          type: string
        holdAt:
          type: integer
          format: int64
        category:
          enum:
            - party
            - seminar
          type: string
        imageUrl:
          type: string
      required:
        - id
        - communityId
        - ownedMemberId
        - name
        - details
        - holdAt
        - category
        - imageUrl
      description: community event informatoion
    CommunityEventComment:
      type: object
      properties:
        id:
          type: string
        eventId:
          type: string
        commentedMemberId:
          type: string
        body:
          type: string
        commentAt:
          type: integer
          format: int64
      required:
        - id
        - eventId
        - commentedMemberId
        - body
        - commentAt
      description: the comment on the community event
    Error:
      type: object
      properties:
        code:
          type: integer
          format: int64
        message:
          type: string
      required:
        - code
        - message
paths:
  /test:
    get:
      operationId: getTest
      description: ping pong
      tags:
        - test
      responses:
        "200":
          description: pong
          content:
            application/json:
              schema:
                example: "Hello : User"
      parameters:
        - name: name
          in: query
          description: ""
          required: true
          schema:
            type: string
  /users:
    get:
      operationId: listUser
      description: 全てのユーザのリストを返します (debug)
      tags:
        - user
      responses:
        "200":
          description: 全てのユーザ
          content:
            application/json:
              schema:
                type: object
                required:
                  - users
                  - totalSize
                properties:
                  users:
                    type: array
                    items:
                      $ref: "#/components/schemas/User"
                  totalSize:
                    type: integer
                    format: int64
                    minimum: 0
                    title: totalSize
  "/users/{id}":
    get:
      operationId: getUser
      tags:
        - user
      responses:
        "200":
          description: id を持つユーザ
          content:
            application/json:
              schema:
                type: object
                required:
                  - user
                properties:
                  user:
                    $ref: "#/components/schemas/User"
        "404":
          description: user is not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      parameters:
        - name: id
          in: path
          description: ""
          required: true
          schema:
            type: string
  /communities:
    get:
      operationId: listCommunity
      tags:
        - community
      description: |-
        全てのコミュニティのリストを返します<br/>
        クエリパラメータは、begin_cursor>last_cursorの順で評価されます<br/>
        - begin_cursor: 指定された community_id より後のコミュニティリストを返す<br/>
        - last_cursor : 指定された community_id より前のコミュニティリストを返す<br/>
        - request_size: 指定されたサイズ以下ののコミュニティリストを返す<br/>
        (指定なしで全ての要素を返す / 最終ページなどでは request_size 未満のサイズのリストを返す)
      responses:
        "200":
          description: コミュニティのリスト
          content:
            application/json:
              schema:
                type: object
                required:
                  - communities
                  - beforeSize
                  - totalSize
                properties:
                  communities:
                    type: array
                    items:
                      type: object
                      properties:
                        community:
                          $ref: "#/components/schemas/Community"
                        isJoined:
                          type: boolean
                          description: the logined user is joined the community
                          title: IsJoined
                          nullable: true
                  beforeSize:
                    type: integer
                    format: int64
                    minimum: 0
                    description: レスポンスのリストより前の要素数
                    title: beforeSize
                  totalSize:
                    type: integer
                    format: int64
                    minimum: 0
                    title: totalSize
      parameters:
        - name: requestSize
          in: query
          description: ""
          required: true
          schema:
            type: integer
            format: int64
            minimum: 1
        - name: beginCursor
          in: query
          description: ""
          required: false
          schema:
            type: string
        - name: lastCursor
          in: query
          description: ""
          required: false
          schema:
            type: string
